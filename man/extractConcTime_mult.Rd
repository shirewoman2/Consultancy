% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extractConcTime_mult.R
\name{extractConcTime_mult}
\alias{extractConcTime_mult}
\title{Pull concentration-time data from multiple Simcyp Simulator output files}
\usage{
extractConcTime_mult(
  sim_data_files = NA,
  obs_to_sim_assignment = NA,
  ct_dataframe = ConcTime,
  overwrite = FALSE,
  tissues = "plasma",
  compoundsToExtract = "all",
  conc_units_to_use = "ng/mL",
  time_units_to_use = "hours",
  returnAggregateOrIndiv = "aggregate",
  ...,
  obs_data_files = NA
)
}
\arguments{
\item{sim_data_files}{a character vector of simulator output files, each in
quotes and encapsulated with \code{c(...)}, or, if left as NA, \emph{all}
the Excel files in the current directory. Example of acceptable input:
\code{c("sim1.xlsx", "sim2.xlsx")}. The path should be included with the
file names if they are located somewhere other than your working directory.
If some of your Excel files are not regular simulator output, e.g. they are
sensitivity analyses or a file where you were doing some calculations,
those files will be skipped.}

\item{obs_to_sim_assignment}{the assignment of which observed files go with
  which simulated files. There are three ways to supply this:

  \describe{\item{a character vector of the observed data files, each in
  quotes and encapsulated with \code{c(...)}}{If all the observed data can be
  compared to all the simulated data, then an example of acceptable input
  would be: \code{obs_to_sim_assignment = "obsdata1.xlsx"}. However, if you
  would like to specify which observed file goes with which simulated file,
  you can do this with a named character vector, e.g.,
  \code{c("obsdata1.xlsx" = "simfileA.xlsx", "obsdata2.xlsx" =
  "simfileB.xlsx")}. If one observed file needs to match more than one
  simulated file but not \emph{all} the simulated files, you can do that by
  separating the simulated files with commas, e.g.,
  \code{obs_to_sim_assignment = c("obs data 1.xlsx" = "mdz-5mg-qd.xlsx,
  mdz-5mg-qd-fa08.xlsx", "obs data 2.xlsx" = "mdz-5mg-qd-cancer.xlsx,
  mdz-5mg-qd-cancer-fa08.xlsx")}. Pay close attention to the position of
  commas and quotes there! This can get a bit confusing, in our opinions, so
  you may want to try the other options if you need to link specific observed
  and simulated files; they can be easier to follow but require more typing.}

  \item{a data.frame with one column for the observed files and one column
  for the simulated files they each match}{The data.frame must have column
  names of "ObsFile" and "SimFile" for the observed and simulated files,
  respectively. Here's an example of acceptable input:
  \code{obs_to_sim_assignment = data.frame(ObsFile = c("obsdata1.xlsx",
  "obsdata2.xlsx"), SimFile = c("simfileA.xlsx", "simfileB.xlsx"))} Each row
  should contain one observed file and one simulated file, so if you want to
  compare a single observed file to multiple simulated files, you'll need to
  repeat the observed file, e.g., \code{obs_to_sim_assignment =
  data.frame(ObsFile = c("obsdata1.xlsx", "obsdata2.xlsx", "obsdata2.xlsx",
  "obsdata2.xlsx"), SimFile = c("simfileA.xlsx", "simfileB.xlsx",
  "simfileC.xlsx", "simfileD.xlsx"))}}

  \item{a csv file with one column for the observed files and one column for
  the simulated files they each match}{The setup of this csv file should be
  just like that described for supplying a data.frame, so one row for each
  pair of simulated and observed files you want to compare to each other.
  Supply this as a character string, like this: \code{obs_to_sim_assignment =
  "My obs to sim assignments.csv"}}}

  For whichever option you choose, the observed files' paths should be
  included if they are located somewhere other than your working directory.
  The observed data files should be for the Excel file that it is
  \emph{ready} to be converted to an XML file, not the file that contains
  only the digitized time and concentration data. This function assumes that
  the dosing intervals for the observed data match those in the simulated
  data. See "Details" for more info.}

\item{ct_dataframe}{(optional) a data.frame that contains previously
extracted concentration-time data. This should NOT be in quotes. Because we
can see scenarios where you might want to extract some concentration-time
data, play around with those data, and then later decide you want to pull
more concentration-time data for comparisons, this data.frame can already
exist. When that is the case, this function will \emph{add} data to that
data.frame. It will \emph{not} overwrite existing data unless
\code{overwrite} is set to TRUE.}

\item{overwrite}{TRUE or FALSE (default) on whether to re-extract the
concentration-time data from output files that are already included in
\code{ct_dataframe}. Since pulling data from Excel files is slow, by
default, this will \emph{not} overwrite existing data and instead will only
add data from any Excel files that aren't already included. A situation
where you might want to set this to TRUE would be when you have changed
input parameters for simulations and re-run them.}

\item{tissues}{From which tissue(s) should the desired concentrations be
extracted? Default is plasma for typical plasma concentration-time data.
Other options are "blood" or any tissues included in "Sheet Options",
"Tissues" in the simulator. All possible options:\describe{
\item{First-order absorption models}{"plasma", "blood", "unbound blood",
"unbound plasma", "additional organ", "adipose", "bone", "brain",
"feto-placenta", "GI tissue", "heart", "kidney", "liver", "lung", "muscle",
"pancreas", "peripheral blood", "peripheral plasma", "peripheral unbound
blood", "peripheral unbound plasma", "portal vein blood", "portal vein
plasma", "portal vein unbound blood", "portal vein unbound plasma", "skin",
or "spleen".} \item{ADAM-models}{"stomach", "duodenum", "jejunum I",
"jejunum II", "ileum I", "ileum II", "ileum III", "ileum IV", "colon",
"faeces", "gut tissue", "cumulative absorption", or "cumulative
dissolution".}} Not case sensitive. Acceptable input is all tissues desired
as a character vector, e.g., \code{tissues = c("plasma", "blood",
"liver")}.}

\item{compoundsToExtract}{For which compound do you want to extract
concentration-time data? Options are: \itemize{\item{"substrate"
(default),} \item{"primary metabolite 1",} \item{"primary metabolite 2",}
\item{"secondary metabolite",} \item{"inhibitor 1" -- this can be an
inducer, inhibitor, activator, or suppresesor, but it's labeled as
"Inhibitor 1" in the simulator,} \item{"inhibitor 2" for the 2nd inhibitor
listed in the simulation,} \item{"inhibitor 1 metabolite" for the primary
metabolite of inhibitor 1} \item{"conjugated protein" for DAR1-DARmax for
an antibody-drug conjugate; observed data with DV listed as "Conjugated
Protein Plasma Total" will match these simulated data,} \item{"total
protein" for DAR0-DARmax for an ADC; observed data with DV listed as "Total
Protein Conjugate Plasma Total" will match these simulated data,}
\item{"released payload" for the released drug from an ADC, which shows up
as primary metabolite 1 in Simulator output files; or} \item{"all" for all
possible compounds in the simulation.}} Input to this argument should be
all desired compounds as a character vector, e.g., \code{c("substrate",
"primary metabolite 1")}. \strong{Note: If your compound is a therapeutic
protein or ADC, we haven't tested this very thoroughly, so please be extra
careful to check that you're getting the correct data.}}

\item{conc_units_to_use}{concentration units to use so that all data will be
comparable. Options are the same as the ones in the Excel form for PE data
entry. Default is "ng/mL". Note: ADAM model data concentration units are
not converted because there are simply too many units to manage easily, so
please check that the units are what you expected in the end.}

\item{time_units_to_use}{time units to use so that all data will be
comparable. Options are "hours" (default) or "minutes".}

\item{returnAggregateOrIndiv}{Return aggregate and/or individual simulated
concentration-time data? Options are "aggregate" (default), "individual",
or "both". Aggregated data are not calculated here but are pulled from the
simulator output rows labeled as "Population Statistics".}

\item{...}{other arguments passed to the function
\code{\link{extractConcTime}}}

\item{obs_data_files}{TO BE DEPRECATED. This is the same argument as
obs_to_sim_assignment; we just renamed it to try to be clearer about what
the argument does and in what order you should list the files.}
}
\value{
Returns a large data.frame with multiple sets of concentration-time
  data, formatted the same way as output from the function
  \code{\link{extractConcTime}}
}
\description{
\code{extractConcTime_mult} is meant to be used in conjunction with
\code{\link{ct_plot_overlay}} or \code{\link{ct_plot_mult}} to create graphs
from multiple Simcyp Simulator output files. If you list multiple files,
multiple tissues, and/or multiple compounds to extract (see options below),
this will extract \emph{all} possible variations of them. For example, if you
<<<<<<< HEAD
ask for data from the files "sim1.xlsx" and "sim2.xlsx" and then also ask for
"substrate" and "primary metabolite 1", you will get the substrate and
primary metabolite 1 data from \emph{both} files. \strong{NOTE:} If ANY of
the Excel files you wish to extract data from are saved on SharePoint and are
open, this WILL CRASH and WILL NOT save whatever progress it has made so far.
Be sure to close all of the source Excel files.
=======
ask for "sim1.xlsx" and "sim2.xlsx" and then also ask for "substrate" and
"primary metabolite 1", you will get the substrate and primary metabolite 1
data from \emph{both} files. \strong{NOTE:} If ANY of the Excel files you
wish to extract data from are saved on SharePoint and are open, this WILL
CRASH and WILL NOT save whatever progress it has made so far. Be sure to
close all of the source Excel files.
>>>>>>> master
}
\details{
\strong{Regarding dose intervals for observed data:} The observed data files
don't include information on dosing intervals or dose numbers, which makes it
a little tricky to figure out which dose number a given time in an observed
data file should have. If the compound IDs in the simulated data match those
in the observed data, we will assume that the dosing intervals are the same.
This was coded with the assumption that the dosing interval would be a round
number (subjects aren't getting dosed on the half hour, for example), so if
that's not the case, these dose number assignments will be off.
}
\examples{
ConcTimeData <-
      extractConcTime_mult(
            sim_data_files = c("MyFile1.xlsx", "MyFile2.xlsx"),
            ct_dataframe = ConcTimeData,
            overwrite = FALSE,
            tissues = "unbound plasma")

}
